version: '3'
services:
    midnight-commander:
        image: docker.io/kalaksi/midnight-commander
        # You can also use GitLab as an alternative to Docker Hub:
        # image: registry.gitlab.com/kalaksi-containers/midnight-commander
        restart: unless-stopped
        cap_drop:
            - ALL
        cap_add:
            - CHOWN
            - SETGID
            - SETUID
            - SYS_CHROOT
        ports:
            - 2222:2222/tcp
        # Some examples of environment variables. See Dockerfile for more information.
        environment:
            MC_SUPPLEMENTARY_GIDS: "12345 12346"
#            MC_AUTHORIZED_KEYS: |
#                ssh-rsa AAAA... me@machine
#                ssh-rsa AAAA... you@machine
        # Docker-compose offers a mechanism for passwords called "secrets", but it requires
        # compose file version 3.1. Alternatively, mount the secrets file manually.
        # secrets:
        #   - mc_password
        volumes:
            - midnight-commander:/etc/ssh
            # You can mount multiple sources by using e.g. /data/data1, /data/data2 as mountpoints.
            - midnight-commander:/data
            # If not using docker-compose for secrets, mount a file containing the password manually.
            # - ./secrets/mc_password:/run/secrets/mc_password:ro

        # secrets:
        #   mc_password:
        #     # Put the password in this file without anything else.
        #     file: ./secrets/mc_password
    laravel.test:
        build:
            context: ./vendor/laravel/sail/runtimes/8.2
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: sail-8.2/app
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:80'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - mysql
            - redis
            - memcached
            - midnight-commander
    mysql:
        image: 'mysql/mysql-server:8.0'
        command: --default-authentication-plugin=mysql_native_password
        ports:
            - '${FORWARD_DB_PORT:-3307}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: '%'
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
        volumes:
            - 'sail-mysql:/var/lib/mysql'
#            - './vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
            - './database/database.sh:/docker-entrypoint-initdb.d/10-database.sh'
        networks:
            - sail
        depends_on:
            - midnight-commander
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - '-p${DB_PASSWORD}'
            retries: 3
            timeout: 5s
    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'sail-redis:/data'
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s
    rcli:
        image: redis:latest
        links:
            - redis
        command: 'redis-cli -h redis'
        networks:
            - sail
    memcached:
        image: 'memcached:alpine'
        ports:
            - '${FORWARD_MEMCACHED_PORT:-11211}:11211'
        networks:
            - sail
networks:
    sail:
        driver: bridge
volumes:
    #    sail-nginx:
    #        driver: local
    midnight-commander: {}
    sail-mysql:
        driver: local
    sail-redis:
        driver: local
